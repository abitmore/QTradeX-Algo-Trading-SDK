name: Weekly Python Package Publish to PyPI

on:
  schedule:
    - cron: '0 0 * * 1'  # Run every Monday at midnight UTC
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check-changes.outputs.has_changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for accurate diff

      - name: Get last successful commit
        id: get-last-commit
        run: |
          # Try to get the last successful commit SHA from the artifact
          mkdir -p last-commit
          if gh run download -n last-commit-sha --dir last-commit; then
            LAST_COMMIT=$(cat last-commit/last-commit-sha.txt)
            echo "Last successful commit: $LAST_COMMIT"
          else
            echo "No previous successful commit found, assuming changes exist"
            LAST_COMMIT=""
          fi
          echo "last_commit=$LAST_COMMIT" >> $GITHUB_ENV

      - name: Check for changes
        id: check-changes
        run: |
          if [ -z "$LAST_COMMIT" ]; then
            echo "No previous commit, assuming changes"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            # Check if there are changes since the last commit
            git fetch origin
            CHANGES=$(git log $LAST_COMMIT..HEAD --oneline)
            if [ -n "$CHANGES" ]; then
              echo "Changes detected since $LAST_COMMIT"
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              echo "No changes detected since $LAST_COMMIT"
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish:
    needs: check-changes
    if: needs.check-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/QTradeX/
    permissions:
      id-token: write  # Mandatory for Trusted Publishing
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python development headers
        run: sudo apt-get update && sudo apt-get install -y python3.9-dev

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build Cython "setuptools>80" setuptools-scm

      - name: Build source tarball and wheel
        run: python -m build --sdist --wheel --outdir dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Save current commit SHA
        if: success()
        run: |
          mkdir -p last-commit
          echo ${{ github.sha }} > last-commit/last-commit-sha.txt

      - name: Upload last commit SHA as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: last-commit-sha
          path: last-commit/last-commit-sha.txt
          retention-days: 7  # Keep artifact for one week
